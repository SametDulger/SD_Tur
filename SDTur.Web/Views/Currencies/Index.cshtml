@model IEnumerable<CurrencyViewModel>
@{
    ViewData["Title"] = "Para Birimleri";
}

<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <h1 class="h3 mb-0">
                <i class="bi bi-currency-exchange text-primary me-2"></i>Para Birimleri
            </h1>
            <a asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-circle me-2"></i>Yeni Para Birimi
            </a>
        </div>
    </div>
</div>

<!-- Filtreler -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-header bg-white">
        <h6 class="card-title mb-0">
            <i class="bi bi-funnel text-info me-2"></i>Filtreler
        </h6>
    </div>
    <div class="card-body">
        <form id="filterForm" class="row g-3">
            <div class="col-lg-4 col-md-6">
                <label class="form-label">Para Birimi</label>
                <select class="form-select" id="currencyFilter">
                    <option value="">Tüm Para Birimleri</option>
                    <option value="TRY">Türk Lirasý</option>
                    <option value="USD">Amerikan Dolarý</option>
                    <option value="EUR">Euro</option>
                    <option value="GBP">Ýngiliz Sterlini</option>
                </select>
            </div>
            <div class="col-lg-4 col-md-6">
                <label class="form-label">Durum</label>
                <select class="form-select" id="statusFilter">
                    <option value="">Tüm Durumlar</option>
                    <option value="true">Aktif</option>
                    <option value="false">Pasif</option>
                </select>
            </div>
            <div class="col-lg-4 col-md-12">
                <label class="form-label">&nbsp;</label>
                <div class="d-grid">
                    <button type="button" class="btn btn-outline-primary" onclick="applyFilters()">
                        <i class="bi bi-search me-2"></i>Filtrele
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Ýstatistikler -->
<div class="row g-4 mb-4" id="statisticsCards">
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <div class="bg-primary bg-opacity-10 rounded-circle p-3">
                            <i class="bi bi-currency-exchange text-primary fs-4"></i>
                        </div>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="card-title text-muted mb-1">Toplam Para Birimi</h6>
                        <h3 class="mb-0 fw-bold" id="totalCurrencies">0</h3>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <div class="bg-success bg-opacity-10 rounded-circle p-3">
                            <i class="bi bi-check-circle text-success fs-4"></i>
                        </div>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="card-title text-muted mb-1">Aktif Para Birimi</h6>
                        <h3 class="mb-0 fw-bold text-success" id="activeCurrencies">0</h3>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <div class="bg-warning bg-opacity-10 rounded-circle p-3">
                            <i class="bi bi-graph-up text-warning fs-4"></i>
                        </div>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="card-title text-muted mb-1">En Yüksek Kur</h6>
                        <h3 class="mb-0 fw-bold text-warning" id="highestRate">0</h3>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-xl-3 col-md-6">
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-shrink-0">
                        <div class="bg-info bg-opacity-10 rounded-circle p-3">
                            <i class="bi bi-calendar text-info fs-4"></i>
                        </div>
                    </div>
                    <div class="flex-grow-1 ms-3">
                        <h6 class="card-title text-muted mb-1">Son Güncelleme</h6>
                        <h3 class="mb-0 fw-bold text-info" id="lastUpdate">-</h3>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Para Birimi Listesi -->
<div class="card border-0 shadow-sm">
    <div class="card-header bg-white">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h5 class="card-title mb-0">
                    <i class="bi bi-list-ul me-2"></i>Para Birimi Listesi
                </h5>
            </div>
            <div class="col-md-6">
                <div class="d-flex justify-content-end gap-2">
                    <div class="input-group">
                        <span class="input-group-text bg-light border-end-0">
                            <i class="bi bi-search text-muted"></i>
                        </span>
                        <input type="text" class="form-control border-start-0" id="searchInput" placeholder="Para birimi ara..." data-search="currenciesTable">
                    </div>
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                            <i class="bi bi-download me-1"></i>Dýþa Aktar
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#" onclick="exportToExcel()">
                                <i class="bi bi-file-earmark-excel me-2"></i>Excel
                            </a></li>
                            <li><a class="dropdown-item" href="#" onclick="exportToPDF()">
                                <i class="bi bi-file-earmark-pdf me-2"></i>PDF
                            </a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive" id="currenciesTable">
            <!-- Dinamik olarak yüklenecek -->
        </div>
    </div>
    <div class="card-footer bg-light">
        <div class="row align-items-center">
            <div class="col-md-6">
                <small class="text-muted">
                    Toplam <strong id="recordCount">0</strong> para birimi bulundu
                </small>
            </div>
            <div class="col-md-6 text-end">
                <nav aria-label="Sayfa navigasyonu">
                    <ul class="pagination pagination-sm mb-0 justify-content-end" id="pagination">
                        <!-- Dinamik olarak oluþturulacak -->
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- Döviz Kuru Grafiði -->
<div class="row mt-4">
    <div class="col-12">
        <div class="card border-0 shadow-sm">
            <div class="card-header bg-white">
                <h5 class="card-title mb-0">
                    <i class="bi bi-graph-up text-success me-2"></i>Döviz Kuru Grafiði
                </h5>
            </div>
            <div class="card-body">
                <canvas id="exchangeRateChart" height="300"></canvas>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let currentFilters = {};
        let exchangeRateChart;
        
        function applyFilters() {
            currentFilters = {
                code: document.getElementById('currencyFilter').value,
                isActive: document.getElementById('statusFilter').value
            };
            
            // Reload data with filters
            const queryString = new URLSearchParams(currentFilters).toString();
            const endpoint = queryString ? `/api/master/currencies?${queryString}` : '/api/master/currencies';
            
            console.log("Load data handled server-side"););
            updateStatistics();
            updateChart();
        }
        
        function updateStatistics() {
            // Load statistics based on current filters
            const queryString = new URLSearchParams(currentFilters).toString();
            const endpoint = queryString ? `/api/master/currencies/statistics?${queryString}` : '/api/master/currencies/statistics';
            
            console.log("API call handled server-side");
                .then(data => {
                    document.getElementById('totalCurrencies').textContent = data.totalCurrencies || 0;
                    document.getElementById('activeCurrencies').textContent = data.activeCurrencies || 0;
                    document.getElementById('highestRate').textContent = (data.highestRate || 0).toFixed(4);
                    document.getElementById('lastUpdate').textContent = data.lastUpdate || '-';
                    document.getElementById('recordCount').textContent = data.totalCurrencies || 0;
                })
                .catch(error => {
                    console.error('Statistics loading failed:', error);
                });
        }
        
        function updateChart() {
            const queryString = new URLSearchParams(currentFilters).toString();
            const endpoint = queryString ? `/api/master/currencies/chart-data?${queryString}` : '/api/master/currencies/chart-data';
            
            console.log("API call handled server-side");
                .then(data => {
                    createExchangeRateChart(data);
                })
                .catch(error => {
                    console.error('Chart data loading failed:', error);
                });
        }
        
        function createExchangeRateChart(data) {
            const ctx = document.getElementById('exchangeRateChart').getContext('2d');
            
            if (exchangeRateChart) {
                exchangeRateChart.destroy();
            }
            
            exchangeRateChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.labels || [],
                    datasets: [{
                        label: 'Döviz Kuru (TL)',
                        data: data.rates || [],
                        backgroundColor: 'rgba(13, 110, 253, 0.8)',
                        borderColor: '#0d6efd',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Kur (TL)'
                            }
                        }
                    }
                }
            });
        }
        
        function exportToExcel() {
            const queryString = new URLSearchParams(currentFilters).toString();
            const filename = `para_birimleri_${new Date().toISOString().split('T')[0]}`;
            console.log("Export to Excel handled server-side");;
        }
        
        function exportToPDF() {
            const queryString = new URLSearchParams(currentFilters).toString();
            const filename = `para_birimleri_${new Date().toISOString().split('T')[0]}`;
            console.log("Export to PDF handled server-side");;
        }
        
        // Auto-load data and setup
        document.addEventListener('DOMContentLoaded', function() {
            // Load initial data
            updateStatistics();
            updateChart();
            
            // Apply initial filters
            applyFilters();
            
            // Setup search functionality
            const searchInput = document.getElementById('searchInput');
            if (searchInput) {
                searchInput.addEventListener('input', function() {
                    const searchTerm = this.value.toLowerCase();
                    const table = document.getElementById('currenciesTable');
                    const rows = table.querySelectorAll('tbody tr');
                    
                    rows.forEach(row => {
                        const text = row.textContent.toLowerCase();
                        row.style.display = text.includes(searchTerm) ? '' : 'none';
                    });
                }, 300));
            }
        });
    </script>
}
